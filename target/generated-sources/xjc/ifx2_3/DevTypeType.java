//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.10 at 05:12:24 PM EST 
//


package ifx2_3;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DevType_Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DevType_Type"&gt;
 *   &lt;restriction base="{IFX2_3}ClosedEnum_Type"&gt;
 *     &lt;enumeration value="Idc"/&gt;
 *     &lt;enumeration value="Ptr"/&gt;
 *     &lt;enumeration value="Cdm"/&gt;
 *     &lt;enumeration value="PIN"/&gt;
 *     &lt;enumeration value="Chk"/&gt;
 *     &lt;enumeration value="Dep"/&gt;
 *     &lt;enumeration value="Ttu"/&gt;
 *     &lt;enumeration value="Siu"/&gt;
 *     &lt;enumeration value="Vdm"/&gt;
 *     &lt;enumeration value="Cam"/&gt;
 *     &lt;enumeration value="Alm"/&gt;
 *     &lt;enumeration value="Ceu"/&gt;
 *     &lt;enumeration value="Cim"/&gt;
 *     &lt;enumeration value="App"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DevType_Type")
@XmlEnum
public enum DevTypeType {

    @XmlEnumValue("Idc")
    IDC("Idc"),
    @XmlEnumValue("Ptr")
    PTR("Ptr"),
    @XmlEnumValue("Cdm")
    CDM("Cdm"),
    PIN("PIN"),
    @XmlEnumValue("Chk")
    CHK("Chk"),
    @XmlEnumValue("Dep")
    DEP("Dep"),
    @XmlEnumValue("Ttu")
    TTU("Ttu"),
    @XmlEnumValue("Siu")
    SIU("Siu"),
    @XmlEnumValue("Vdm")
    VDM("Vdm"),
    @XmlEnumValue("Cam")
    CAM("Cam"),
    @XmlEnumValue("Alm")
    ALM("Alm"),
    @XmlEnumValue("Ceu")
    CEU("Ceu"),
    @XmlEnumValue("Cim")
    CIM("Cim"),
    @XmlEnumValue("App")
    APP("App");
    private final String value;

    DevTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DevTypeType fromValue(String v) {
        for (DevTypeType c: DevTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
