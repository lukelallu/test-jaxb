//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.11.10 at 05:12:24 PM EST 
//


package ifx1_7.pain.two.one.one;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PaymentReject1Code.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PaymentReject1Code"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="AC01"/&gt;
 *     &lt;enumeration value="AC02"/&gt;
 *     &lt;enumeration value="AC03"/&gt;
 *     &lt;enumeration value="AC04"/&gt;
 *     &lt;enumeration value="AC05"/&gt;
 *     &lt;enumeration value="AC06"/&gt;
 *     &lt;enumeration value="AM01"/&gt;
 *     &lt;enumeration value="AM02"/&gt;
 *     &lt;enumeration value="AM03"/&gt;
 *     &lt;enumeration value="AM04"/&gt;
 *     &lt;enumeration value="AM05"/&gt;
 *     &lt;enumeration value="AM06"/&gt;
 *     &lt;enumeration value="AM07"/&gt;
 *     &lt;enumeration value="AM08"/&gt;
 *     &lt;enumeration value="BE01"/&gt;
 *     &lt;enumeration value="BE02"/&gt;
 *     &lt;enumeration value="BE03"/&gt;
 *     &lt;enumeration value="BE04"/&gt;
 *     &lt;enumeration value="BE05"/&gt;
 *     &lt;enumeration value="AG01"/&gt;
 *     &lt;enumeration value="AG02"/&gt;
 *     &lt;enumeration value="DT01"/&gt;
 *     &lt;enumeration value="MS01"/&gt;
 *     &lt;enumeration value="PY01"/&gt;
 *     &lt;enumeration value="RF01"/&gt;
 *     &lt;enumeration value="RC01"/&gt;
 *     &lt;enumeration value="RC02"/&gt;
 *     &lt;enumeration value="RC03"/&gt;
 *     &lt;enumeration value="RC04"/&gt;
 *     &lt;enumeration value="TM01"/&gt;
 *     &lt;enumeration value="ED01"/&gt;
 *     &lt;enumeration value="ED02"/&gt;
 *     &lt;enumeration value="ED03"/&gt;
 *     &lt;enumeration value="ED04"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "PaymentReject1Code")
@XmlEnum
public enum PaymentReject1Code {

    @XmlEnumValue("AC01")
    AC_01("AC01"),
    @XmlEnumValue("AC02")
    AC_02("AC02"),
    @XmlEnumValue("AC03")
    AC_03("AC03"),
    @XmlEnumValue("AC04")
    AC_04("AC04"),
    @XmlEnumValue("AC05")
    AC_05("AC05"),
    @XmlEnumValue("AC06")
    AC_06("AC06"),
    @XmlEnumValue("AM01")
    AM_01("AM01"),
    @XmlEnumValue("AM02")
    AM_02("AM02"),
    @XmlEnumValue("AM03")
    AM_03("AM03"),
    @XmlEnumValue("AM04")
    AM_04("AM04"),
    @XmlEnumValue("AM05")
    AM_05("AM05"),
    @XmlEnumValue("AM06")
    AM_06("AM06"),
    @XmlEnumValue("AM07")
    AM_07("AM07"),
    @XmlEnumValue("AM08")
    AM_08("AM08"),
    @XmlEnumValue("BE01")
    BE_01("BE01"),
    @XmlEnumValue("BE02")
    BE_02("BE02"),
    @XmlEnumValue("BE03")
    BE_03("BE03"),
    @XmlEnumValue("BE04")
    BE_04("BE04"),
    @XmlEnumValue("BE05")
    BE_05("BE05"),
    @XmlEnumValue("AG01")
    AG_01("AG01"),
    @XmlEnumValue("AG02")
    AG_02("AG02"),
    @XmlEnumValue("DT01")
    DT_01("DT01"),
    @XmlEnumValue("MS01")
    MS_01("MS01"),
    @XmlEnumValue("PY01")
    PY_01("PY01"),
    @XmlEnumValue("RF01")
    RF_01("RF01"),
    @XmlEnumValue("RC01")
    RC_01("RC01"),
    @XmlEnumValue("RC02")
    RC_02("RC02"),
    @XmlEnumValue("RC03")
    RC_03("RC03"),
    @XmlEnumValue("RC04")
    RC_04("RC04"),
    @XmlEnumValue("TM01")
    TM_01("TM01"),
    @XmlEnumValue("ED01")
    ED_01("ED01"),
    @XmlEnumValue("ED02")
    ED_02("ED02"),
    @XmlEnumValue("ED03")
    ED_03("ED03"),
    @XmlEnumValue("ED04")
    ED_04("ED04");
    private final String value;

    PaymentReject1Code(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PaymentReject1Code fromValue(String v) {
        for (PaymentReject1Code c: PaymentReject1Code.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
